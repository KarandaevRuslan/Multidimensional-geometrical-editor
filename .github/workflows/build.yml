# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            host: linux
            arch: gcc_64
            generator: Ninja
            cmake_extra: ""
            build_dir: build
            artifact_name: NDEditor-linux-x86_64
          - os: windows-latest
            host: windows
            arch: win64_msvc2019_64
            generator: "Visual Studio 16 2019"
            cmake_extra: "-A x64"
            build_dir: build
            artifact_name: NDEditor-windows-x86_64
          - os: macos-latest
            host: mac
            arch: clang_64
            generator: Ninja
            cmake_extra: "-DCMAKE_OSX_ARCHITECTURES=x86_64"
            build_dir: build
            artifact_name: NDEditor-macos-x86_64

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.6.3
        host:   ${{ matrix.host }}
        target: desktop
        arch:   ${{ matrix.arch }}
        archives: "qtbase qttools"
        cache:  true

    - name: Install build tools (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libicu-dev

    - name: Install Ninja (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install ninja

    # 1) Debug configure + test build
    - name: Configure (Debug + tests)
      run: cmake -S . -B "${{ matrix.build_dir }}" \
                 -G "${{ matrix.generator }}" \
                 -DCMAKE_BUILD_TYPE=Debug \
                 ${{ matrix.cmake_extra }}

    - name: Build tests
      run: cmake --build "${{ matrix.build_dir }}" --target Test

    - name: Run Google Tests
      run: ctest --test-dir "${{ matrix.build_dir }}" --output-on-failure

    # 2) Release configure + editor build
    - name: Configure (Release)
      run: cmake -S . -B "${{ matrix.build_dir }}/rel" \
                 -G "${{ matrix.generator }}" \
                 -DCMAKE_BUILD_TYPE=Release \
                 ${{ matrix.cmake_extra }}

    - name: Build NDEditor (Release)
      run: cmake --build "${{ matrix.build_dir }}/rel" --target NDEditor

    # 3) Package
    - name: Package artefact
      shell: bash
      run: |
        cd "${{ matrix.build_dir }}/rel"
        case "${{ runner.os }}" in
          Windows)
            7z a "../${{ matrix.artifact_name }}.zip" NDEditor.exe
            ;;
          macOS)
            # NOTE: your code currently fails on macOS with a QDialog copy-ctor error.
            #       You’ll need to adjust your CMakeLists / header to avoid generating
            #       a moc‐meta‐type for a non‐copyable QDialog subclass.
            tar czf "../${{ matrix.artifact_name }}.tar.gz" NDEditor.app
            ;;
          *)
            tar czf "../${{ matrix.artifact_name }}.tar.gz" NDEditor
            ;;
        esac

    - name: Upload artefact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          ${{ matrix.build_dir }}/${{ matrix.artifact_name }}.zip
          ${{ matrix.build_dir }}/${{ matrix.artifact_name }}.tar.gz
        if-no-files-found: error
