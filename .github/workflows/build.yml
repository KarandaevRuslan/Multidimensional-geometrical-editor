name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            host: linux
            arch: gcc_64
            cmake_extra: ""
            build_dir: build
            artifact_name: NDEditor-linux-x86_64
          - os: windows-latest
            host: windows
            arch: win64_msvc2019_64
            cmake_extra: ""
            build_dir: build
            artifact_name: NDEditor-windows-x86_64
          - os: macos-latest
            host: mac
            arch: clang_64
            cmake_extra: "-DCMAKE_OSX_ARCHITECTURES=x86_64"
            build_dir: build
            artifact_name: NDEditor-macos-x86_64

    steps:
      - uses: actions/checkout@v4
        name: Checkout source

      - name: Install Qt (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-base-dev qt6-tools-dev qtbase5-dev-tools ninja-build libgtest-dev

      - name: Install Qt (Windows & macOS)
        if: runner.os != 'Linux'
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.6.3
          host:   ${{ matrix.host }}
          target: desktop
          arch:   ${{ matrix.arch }}
          archives: "qtbase qttools"
          cache:  true

      - name: Install Ninja (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install ninja

      # 1) Debug + tests
      - name: Configure (Debug + tests)
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake -S . -B "${{ matrix.build_dir }}" \
              -G "Visual Studio 17 2022" -A x64 \
              -DCMAKE_BUILD_TYPE=Debug
          else
            cmake -S . -B "${{ matrix.build_dir }}" \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Debug \
              ${{ matrix.cmake_extra }}
          fi

      - name: Build tests
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake --build "${{ matrix.build_dir }}" --config Debug --target Test
          else
            cmake --build "${{ matrix.build_dir }}" --target Test
          fi

      - name: Run Google Tests
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./"${{ matrix.build_dir }}"/Debug/Test.exe --gtest_color=yes
          else
            ./"${{ matrix.build_dir }}"/Test --gtest_color=yes
          fi

      # 2) Release
      - name: Configure (Release)
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake -S . -B "${{ matrix.build_dir }}/rel" \
              -G "Visual Studio 17 2022" -A x64 \
              -DCMAKE_BUILD_TYPE=Release
          else
            cmake -S . -B "${{ matrix.build_dir }}/rel" \
              -G Ninja \
              -DCMAKE_BUILD_TYPE=Release \
              ${{ matrix.cmake_extra }}
          fi

      - name: Build NDEditor (Release)
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake --build "${{ matrix.build_dir }}/rel" --config Release --target NDEditor
          else
            cmake --build "${{ matrix.build_dir }}/rel" --target NDEditor
          fi

      # 3) Upload from build/rel
      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path:
            - ${{ matrix.build_dir }}/rel/Release/NDEditor.exe
            - ${{ matrix.build_dir }}/rel/NDEditor
            - ${{ matrix.build_dir }}/rel/NDEditor.app
          if-no-files-found: error
